#+TITLE: Emacs Configuration
#+PROPERTY: header-args:emacs-lisp :tangle post-init.el

* Introduction

  This file will generate a post-init.el file. This should be loaded from init.el with ~(load-file "path-to-post-init.el")~

* Auto-Tangle

  Sets up Auto tangle on save

#+BEGIN_SRC emacs-lisp

  (defun cwchriswilliams/org-babel-auto-tangle()
    (when (or
	   (string-equal (buffer-file-name)
			 (expand-file-name "~/D/I/arch_config/.config/emacs/post-init.org"))
	   (string-equal (buffer-file-name)
			 (expand-file-name "~/D/I/arch_config/.config/i3/config.org"))
	   (string-equal (buffer-file-name)
			 (expand-file-name "~/D/I/arch_config/.config/rofi/config.org"))
	   (string-equal (buffer-file-name)
			 (expand-file-name "~/D/I/arch_config/usr/share/X11/xorg.conf.d/41-libinput-user.org"))
	   (string-equal (buffer-file-name)
			 (expand-file-name "~/D/I/arch_config/.config/i3blocks/config.org"))
	   )
      (org-babel-tangle)))

  (add-hook 'org-mode-hook (lambda () (add-hook 'after-save-hook #'cwchriswilliams/org-babel-auto-tangle)))

#+END_SRC

* Backups

  Change the backup handling to write to a specific directory to stop polluting git directories

#+BEGIN_SRC emacs-lisp
  (setq backup-by-copying t
      backup-directory-alist
      '(("." . "~/.emacs-backups/"))
      delete-old-versions t
      kept-new-versions 6
      kept-old-versions 2
      version-control t)
#+END_SRC

* Basic UI Configuration

  Sets up the basic UI configuration with no dependency on external packages.

** Frame Decoration

   We don't use the scroll-bar or tool-bar so remove those always

#+BEGIN_SRC emacs-lisp

  (scroll-bar-mode -1)
  (tool-bar-mode -1)
#+END_SRC

** Location Identification

   Always highlight the current line.
   Show column number in status bar.
   Show line numbers except in terminal modes

#+BEGIN_SRC emacs-lisp

  (global-hl-line-mode +1)

  (column-number-mode)

  (global-display-line-numbers-mode t)
      (dolist (mode '(term-mode-hook
		    shell-mode-hook
		    eshell-mode-hook))
     (add-hook mode (lambda () (display-line-numbers-mode 0))))

#+END_SRC

** Trailing Whitespace

   Delete trailing whitespace for programming modes

#+BEGIN_SRC emacs-lisp

  (add-hook 'prog-mode-hook
	  (lambda ()
	   (add-hook 'before-save-hook 'delete-trailing-whitespace)))

#+END_SRC

** Show Parens
   Highlight the matching paren on closing paren.

#+BEGIN_SRC emacs-lisp
   (show-paren-mode 1)
#+END_SRC

** Font

#+BEGIN_SRC emacs-lisp
  (set-face-attribute 'default nil :font "Source Code Pro" :height 140)
#+END_SRC

* Package Management

  This sets up package management repositories and tools

** Basic Package Setup

   - melpa for the latest
   - org for the latest org-mode content
   - melpa-stable as a fallback

#+BEGIN_SRC emacs-lisp

  (require 'package)

  (add-to-list 'package-archives '("melpa" . "https://melpa.org/packages/") t)
  (add-to-list 'package-archives '("org" . "https://orgmode.org/elpa/") t)
  (add-to-list 'package-archives '("melpa-stable" . "https://stable.melpa.org/pacakges/") t)

  (package-initialize)

  (unless package-archive-contents
   (package-refresh-contents))
  (package-install-selected-packages)

#+END_SRC

** use-package Setup

Setup use-package which allows for cleaner specification of pacakges and package configuration

#+BEGIN_SRC emacs-lisp

  (unless (package-installed-p 'use-package)
   (package-install 'use-package))

  (require 'use-package)
  (setq use-package-always-ensure t)

#+END_SRC

* Theme

#+BEGIN_SRC emacs-lisp

    (use-package gruvbox-theme
     :config (load-theme 'gruvbox-dark-medium t))

#+END_SRC

* Modeline setup

Use Doom-modeline for modeline (all-the-icons is a dependency)

#+BEGIN_SRC emacs-lisp
  (use-package all-the-icons
    :if (display-graphic-p))

  (use-package doom-modeline
    :init (doom-modeline-mode 1))
#+END_SRC

* Evil Mode

Enable Evil Mode for vim keybindings

** Basic Evil Mode

#+BEGIN_SRC emacs-lisp

  (use-package evil
    :config (evil-mode 1))

#+END_SRC

** Evil Collection

Evil Collection enables evil bindings in more modes.

NOTE: Requires evil-want-keybinding to be nil

#+BEGIN_SRC emacs-lisp

  (use-package evil-collection
   :after evil
   :init (setq evil-want-keybinding nil)
   :config (evil-collection-init))

#+END_SRC
